@model UpdateRoomCategoryVM

@{
    Layout = "_NavigationBar";
    ViewBag.Title = "Update Room Category";
}

<link href="/css/_Insert.css" rel="stylesheet" asp-append-version="true" />

<div class="container">
    <div class="title-cancel">
        <h1>Update Room Category</h1>
        <a class="cancel-button" href="/Admin/RoomCategory">
            <i class="fas fa-times"></i>
        </a>
    </div>
    <form method="post" class="form" enctype="multipart/form-data">
        <!-- Room Category Details -->
        <input asp-for="categoryID" hidden>

        <div class="form-row">
            <div class="form-group">
                <label asp-for="categoryName">Category Name</label>
                <input asp-for="categoryName">
                <span asp-validation-for="categoryName"></span>
            </div>
            <div class="form-group">
                <label asp-for="theme">Theme</label>
                <input asp-for="theme">
                <span asp-validation-for="theme"></span>
            </div>
        </div>

        <div class="form-row">
            <div class="form-group">
                <label asp-for="size">Size</label>
                <input asp-for="size">
                <span asp-validation-for="size"></span>
            </div>
            <div class="form-group">
                <label asp-for="capacity">Capacity</label>
                <input asp-for="capacity">
                <span asp-validation-for="capacity"></span>
            </div>
        </div>

        <div class="form-row">
            <div class="form-group">
                <label asp-for="bed">Bed Type</label>
                <input asp-for="bed">
                <span asp-validation-for="bed"></span>
            </div>
            <div class="form-group">
                <label asp-for="price">Price (Per Night)</label>
                <input asp-for="price">
                <span asp-validation-for="price"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="form-group">
                <label asp-for="description">Desciption</label>
                <input asp-for="description">
                <span asp-validation-for="description"></span>
            </div>
        </div>

        <!-- Dynamic Photo Upload -->
        <div class="form-row">
            <!-- Display existing images -->
            @foreach (var image in Model.CategoryImages)
            {
                <label asp-for="Photos" hidden>Photos</label>
                <div id="photo-upload-container" class="photo-upload-container">
                    <div class="photo-upload-item">
                        <label class="upload">
                            <input name="Photos" type="file" accept="image/jpeg,image/png" hidden>
                            <img src="/uploads/@image.ImagePath" class="picture-placeholder">
                        </label>
                        <input type="hidden" name="PhotosToKeep" value="@image.ImagePath" />
                        <button type="button" class="btn-remove-photo" disabled>&times;</button>
                    </div>
                </div>
            }
        </div>

        <!-- Add button for adding new photos -->
        <div id="photo-upload-container" class="photo-upload-container"></div>

        <!-- Form Actions -->
        <div class="form-actions">
            <button type="submit" class="btn-submit">Update Category</button>
            <button type="reset" class="btn-reset">Reset</button>
        </div>
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const photoUploadContainer = document.getElementById("photo-upload-container");
        const maxPhotos = 6; // Maximum allowed photos

        // Add button for adding more photo inputs with an image
        const addButton = document.createElement("button");
        addButton.type = "button";
        addButton.classList.add("btn-add-photo");

        // Add an image inside the button
        const addButtonImage = document.createElement("img");
        addButtonImage.src = "/images/addBtn.png";
        addButtonImage.alt = "Add Photo";
        addButtonImage.classList.add("add-button-image");
        addButton.appendChild(addButtonImage);

        photoUploadContainer.appendChild(addButton);

        // Add event listener to the Add Photo button
        addButton.addEventListener("click", () => {
            if (photoUploadContainer.querySelectorAll(".photo-upload-item").length < maxPhotos) {
                showNewFileInput();
            }
            checkAddButtonVisibility();
        });

        // Function to show a new photo input form
        function showNewFileInput() {
            const newPhotoUpload = document.createElement("div");
            newPhotoUpload.classList.add("photo-upload-item");
            newPhotoUpload.innerHTML = `
                <label class="upload">
                    <input name="Photos" type="file" accept="image/jpeg,image/png" hidden>
                    <img src="/images/photo.jpg" class="picture-placeholder">
                </label>
                <button type="button" class="btn-remove-photo">&times;</button>
            `;
            photoUploadContainer.insertBefore(newPhotoUpload, addButton);

            const newFileInput = newPhotoUpload.querySelector("input[type='file']");
            const newImgPreview = newPhotoUpload.querySelector("img");
            const removeButton = newPhotoUpload.querySelector(".btn-remove-photo");

            // Handle the change event for the new file input
            newFileInput.addEventListener("change", () => {
                if (newFileInput.files && newFileInput.files[0]) {
                    newImgPreview.src = URL.createObjectURL(newFileInput.files[0]);
                }
            });

            // Remove photo item when clicking the remove button
            removeButton.addEventListener("click", () => {
                newPhotoUpload.remove();
                checkAddButtonVisibility();
            });
        }

        // Function to check if the "Add Photo" button should be visible
        function checkAddButtonVisibility() {
            const currentPhotos = photoUploadContainer.querySelectorAll(".photo-upload-item").length;
            if (currentPhotos >= maxPhotos) {
                addButton.style.display = "none"; // Hide the Add Photo button
            } else {
                addButton.style.display = "block"; // Show the Add Photo button
            }
        }

        // Initial check for the Add Photo button visibility
        checkAddButtonVisibility();
    });
</script>